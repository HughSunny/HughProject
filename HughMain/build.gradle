apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId "set.com.hughproject"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 1
        versionName "1.0"

        ndk {
            moduleName "NdkJniDemo"
            ldLibs "log", "z", "m", "jnigraphics", "android"
            abiFilters "armeabi" , "armeabi-v7a"

            moduleName "ffmpegdemo"         //生成的so名字
            ldLibs "log", "z", "m", "jnigraphics", "android"
            abiFilters "armeabi" , "armeabi-v7a"//, "x86" //输出指定三种abi体系结构下的so库，目前可有可无。
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    useLibrary 'org.apache.http.legacy'
    sourceSets.main {// 禁用自动执行ndk-build
        jni.srcDirs = []
        jniLibs.srcDir 'libs'
//        jniLibs {
//            dependencies {
//                library file("./libs/libavcodec-57.so") abi "armeabi"
//                library file("./libs/libavfilter-6.so") abi "armeabi"
//                library file("./libs/libavformat-57.so") abi "armeabi"
//                library file("./libs/libavutil-55.so") abi "armeabi"
//                library file("./libs/libwresample-2.so") abi "armeabi"
//                library file("./libs/libwscale.so") abi "armeabi"
//            }
//        }
    }
//    sourceSets { main { jni.srcDirs = ['src/main/jni', 'src/main/jni/'] } }
//
//    task nativeLibsToJar(type: Zip, description: "create a jar archive of the native libs") {
//        destinationDir file("$projectDir/libs")
//        baseName "Native_Libs2"
//        extension "jar"
//        from fileTree(dir: "libs", include: "**/*.so")
//        into "lib"
//    }
//
//    tasks.withType(JavaCompile) {
//        compileTask -> compileTask.dependsOn(nativeLibsToJar)
//    }


    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }

    buildToolsVersion '28.0.3'
}
repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':HughWork')
    implementation files('src/main/libs/universal-image-loader-1.8.6-with-sources.jar')
    //annotationProcessor 取代apt
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.0'
    implementation 'com.jakewharton:butterknife:8.5.0'
    implementation 'com.android.support:appcompat-v7:'+ rootProject.ext.dependencies.support_version
    implementation 'com.android.support:recyclerview-v7:' + rootProject.ext.dependencies.support_version
    implementation 'com.android.support:design:' + rootProject.ext.dependencies.support_version
    implementation 'com.squareup.retrofit2:retrofit:2.0.2'
    //implementation 'com.squareup.retrofit2:adapter-rxjava:2.0.0-beta4'
    implementation 'com.squareup.retrofit2:converter-gson:2.0.0-beta4'
    implementation 'com.squareup.okhttp3:okhttp:3.2.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.2.0'
    implementation 'com.google.code.gson:gson:2.5'
    // rxjava
    implementation "io.reactivex.rxjava2:rxjava:2.0.7"
    implementation "io.reactivex.rxjava2:rxandroid:2.0.1"
    testImplementation 'junit:junit:4.12'

}
