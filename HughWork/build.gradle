apply plugin: 'com.android.library'

android {
    compileSdkVersion 23
    buildToolsVersion '25.0.2'

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
    useLibrary 'org.apache.http.legacy'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.3.0'
    compile files('libs/ksoap2-android-3.0.0.jar')
    compile 'com.squareup.retrofit2:retrofit:2.0.2'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.0-beta4'
    compile 'com.squareup.retrofit2:converter-gson:2.0.0-beta4'
    compile 'com.squareup.okhttp3:okhttp:3.2.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.2.0'
    // rxjava
    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'io.reactivex:rxjava:1.1.0'
}



 task clearJar(type: Delete) {
 delete 'build/libs/worksdk.jar'
 }

 task makeJar(type: Copy) {
 from('build/intermediates/bundles/release/')
 into('build/libs/')
 include('classes.jar')
 rename ('classes.jar', 'worksdk.jar')
 }

 makeJar.dependsOn(clearJar,build)


//在终端执行生成JAR包
// gradlew makeJar

/**
 *
 * task deleteOldJar(type: Delete) {
 delete 'build/outputs/work.jar'
 }

 task exportJar(type: Copy) {
 from('build/intermediates/bundles/release/')
 into('build/libs/')
 include('classes.jar')
 rename ('classes.jar', 'work.jar')
 }

 exportJar.dependsOn(deleteOldJar, build)



 //定义一个函数，target是生成jar包的文件名，classDir是class文件所在的文件夹
 def makeworkJar(String target,String classDir){
 exec{
 executable "jar"   //调用jar
 args "cvf",target
 args "-C", classDir
 args "","."
 }
 }

 //新建一个task,名为buildLib,依赖build(build是一个自带的task)
 task buildLib(dependsOn:['build'])<< {
 makeworkJar("work.jar","build/intermediates/classes/release")
 }
 */